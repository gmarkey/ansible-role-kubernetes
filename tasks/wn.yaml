---
- name: Install packages
  package: name=kubernetes-node state=installed

- name: Configure SELinux to use NFS
  command: setsebool virt_use_nfs on
  ignore_errors: True

- name: Configure Docker to use registry cache
  lineinfile:
    dest: /etc/sysconfig/docker
    line: OPTIONS='--registry-mirror=http://{{ kube_server }}:5000 --selinux-enabled --log-driver=journald'
    regexp: "^OPTIONS"
  notify: restart docker
  when:
    - kube_use_registry_cache

- name: Overlay | startup options
  lineinfile:
    dest: /etc/sysconfig/flanneld
    line: FLANNEL_OPTIONS="-etcd-endpoints=http://{{ kube_server }}:2379 -etcd-prefix=/atomic.io/network"
    regexp: "^FLANNEL_OPTIONS="

- name: Flannel systemd | create service.d
  file:
    path: /etc/systemd/system/docker.service.d/
    state: directory

- name: Flannel systemd | deploy unit file
  copy:
    src: flanneld-network.conf
    dest: /etc/systemd/system/docker.service.d/10-flanneld-network.conf
  notify: reload systemd-daemon

- name: k8s client configuration
  lineinfile:
    dest: /etc/kubernetes/kubelet
    line: KUBELET_ADDRESS="--address={{ kube_kubelet_address }}"
    regexp: "^KUBELET_ADDRESS"
  notify: restart kubelet
  when:
    - kube_kubelet_address is defined

- name: k8s client configuration | KUBELET_HOSTNAME
  lineinfile:
    dest: /etc/kubernetes/kubelet
    line: KUBELET_HOSTNAME="--hostname_override={{ kube_kubelet_hostname }}"
    regexp: "^KUBELET_HOSTNAME="
  notify: restart kubelet
  when:
    - kube_kubelet_hostname is defined

- name: k8s client configuration | KUBELET_ARGS
  lineinfile:
    dest: /etc/kubernetes/kubelet
    line: KUBELET_ARGS="{{ kube_kubelet_arbitrary_args|join(' ') }}"
    regexp: "^KUBELET_ARGS="
  notify: restart kubelet
  when:
    - kube_kubelet_arbitrary_args | length > 0

- name: k8s client configuration | KUBELET_API_SERVER
  lineinfile:
    dest: /etc/kubernetes/kubelet
    line: KUBELET_API_SERVER="--api_servers=http://{{ kube_server }}:8080"
    regexp: "^KUBELET_API_SERVER"
  notify: restart kubelet

- name: Configure k8s master on client | KUBE_MASTER
  lineinfile:
    dest: /etc/kubernetes/config
    line: KUBE_MASTER="--master=http://{{ kube_server }}:8080"
    regexp: "^KUBE_MASTER"
  notify: restart kubelet

- name: Stop and disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: False

- name: Restart and enable services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - flanneld
    - kubelet
    - kube-proxy
